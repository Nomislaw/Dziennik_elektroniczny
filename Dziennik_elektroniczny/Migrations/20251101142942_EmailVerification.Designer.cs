// <auto-generated />
using System;
using Dziennik_elektroniczny.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Dziennik_elektroniczny.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251101142942_EmailVerification")]
    partial class EmailVerification
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Dziennik_elektroniczny.Models.Frekwencja", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UczenId")
                        .HasColumnType("int");

                    b.Property<int>("ZajeciaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UczenId");

                    b.HasIndex("ZajeciaId");

                    b.ToTable("Frekwencje");
                });

            modelBuilder.Entity("Dziennik_elektroniczny.Models.Klasa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("PlanId")
                        .HasColumnType("int");

                    b.Property<int>("Rok")
                        .HasColumnType("int");

                    b.Property<int?>("WychowawcaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WychowawcaId")
                        .IsUnique();

                    b.ToTable("Klasy");
                });

            modelBuilder.Entity("Dziennik_elektroniczny.Models.Ocena", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataWystawienia")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("NauczycielId")
                        .HasColumnType("int");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PrzedmiotId")
                        .HasColumnType("int");

                    b.Property<string>("Typ")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UczenId")
                        .HasColumnType("int");

                    b.Property<float>("Wartosc")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("NauczycielId");

                    b.HasIndex("PrzedmiotId");

                    b.HasIndex("UczenId");

                    b.ToTable("Oceny");
                });

            modelBuilder.Entity("Dziennik_elektroniczny.Models.Plan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KlasaId")
                        .HasColumnType("int");

                    b.Property<int>("SemestrId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KlasaId")
                        .IsUnique();

                    b.HasIndex("SemestrId");

                    b.ToTable("Plany");
                });

            modelBuilder.Entity("Dziennik_elektroniczny.Models.Przedmiot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Przedmioty");
                });

            modelBuilder.Entity("Dziennik_elektroniczny.Models.Sala", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Numer")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Sale");
                });

            modelBuilder.Entity("Dziennik_elektroniczny.Models.Semestr", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataRozpoczecia")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataZakonczenia")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Numer")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Semestry");
                });

            modelBuilder.Entity("Dziennik_elektroniczny.Models.Uzytkownik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("CzyEmailPotwierdzony")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("HasloHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("KlasaId")
                        .HasColumnType("int");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Rola")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TokenWeryfikacyjny")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("KlasaId");

                    b.ToTable("Uzytkownicy");
                });

            modelBuilder.Entity("Dziennik_elektroniczny.Models.Zadanie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataOddania")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("NauczycielId")
                        .HasColumnType("int");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PrzedmiotId")
                        .HasColumnType("int");

                    b.Property<string>("Tytul")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("NauczycielId");

                    b.HasIndex("PrzedmiotId");

                    b.ToTable("Zadania");
                });

            modelBuilder.Entity("Dziennik_elektroniczny.Models.Zajecia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("GodzinaRozpoczecia")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("GodzinaZakonczenia")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("NauczycielId")
                        .HasColumnType("int");

                    b.Property<int>("PlanId")
                        .HasColumnType("int");

                    b.Property<int>("PrzedmiotId")
                        .HasColumnType("int");

                    b.Property<int>("SalaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NauczycielId");

                    b.HasIndex("PlanId");

                    b.HasIndex("PrzedmiotId");

                    b.HasIndex("SalaId");

                    b.ToTable("Zajecia");
                });

            modelBuilder.Entity("Opieka", b =>
                {
                    b.Property<int>("RodzicId")
                        .HasColumnType("int");

                    b.Property<int>("UczenId")
                        .HasColumnType("int");

                    b.HasKey("RodzicId", "UczenId");

                    b.HasIndex("UczenId");

                    b.ToTable("Opieka");
                });

            modelBuilder.Entity("Dziennik_elektroniczny.Models.Frekwencja", b =>
                {
                    b.HasOne("Dziennik_elektroniczny.Models.Uzytkownik", "Uczen")
                        .WithMany("Frekwencje")
                        .HasForeignKey("UczenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dziennik_elektroniczny.Models.Zajecia", "Zajecia")
                        .WithMany("Frekwencje")
                        .HasForeignKey("ZajeciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Uczen");

                    b.Navigation("Zajecia");
                });

            modelBuilder.Entity("Dziennik_elektroniczny.Models.Klasa", b =>
                {
                    b.HasOne("Dziennik_elektroniczny.Models.Uzytkownik", "Wychowawca")
                        .WithOne("Wychowawstwo")
                        .HasForeignKey("Dziennik_elektroniczny.Models.Klasa", "WychowawcaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Wychowawca");
                });

            modelBuilder.Entity("Dziennik_elektroniczny.Models.Ocena", b =>
                {
                    b.HasOne("Dziennik_elektroniczny.Models.Uzytkownik", "Nauczyciel")
                        .WithMany("WystawioneOceny")
                        .HasForeignKey("NauczycielId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dziennik_elektroniczny.Models.Przedmiot", "Przedmiot")
                        .WithMany("Oceny")
                        .HasForeignKey("PrzedmiotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dziennik_elektroniczny.Models.Uzytkownik", "Uczen")
                        .WithMany("Oceny")
                        .HasForeignKey("UczenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nauczyciel");

                    b.Navigation("Przedmiot");

                    b.Navigation("Uczen");
                });

            modelBuilder.Entity("Dziennik_elektroniczny.Models.Plan", b =>
                {
                    b.HasOne("Dziennik_elektroniczny.Models.Klasa", "Klasa")
                        .WithOne("Plan")
                        .HasForeignKey("Dziennik_elektroniczny.Models.Plan", "KlasaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dziennik_elektroniczny.Models.Semestr", "Semestr")
                        .WithMany("Plany")
                        .HasForeignKey("SemestrId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Klasa");

                    b.Navigation("Semestr");
                });

            modelBuilder.Entity("Dziennik_elektroniczny.Models.Uzytkownik", b =>
                {
                    b.HasOne("Dziennik_elektroniczny.Models.Klasa", "Klasa")
                        .WithMany("Uczniowie")
                        .HasForeignKey("KlasaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Klasa");
                });

            modelBuilder.Entity("Dziennik_elektroniczny.Models.Zadanie", b =>
                {
                    b.HasOne("Dziennik_elektroniczny.Models.Uzytkownik", "Nauczyciel")
                        .WithMany("UtworzoneZadania")
                        .HasForeignKey("NauczycielId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dziennik_elektroniczny.Models.Przedmiot", "Przedmiot")
                        .WithMany("Zadania")
                        .HasForeignKey("PrzedmiotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nauczyciel");

                    b.Navigation("Przedmiot");
                });

            modelBuilder.Entity("Dziennik_elektroniczny.Models.Zajecia", b =>
                {
                    b.HasOne("Dziennik_elektroniczny.Models.Uzytkownik", "Nauczyciel")
                        .WithMany("ProwadzoneZajecia")
                        .HasForeignKey("NauczycielId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dziennik_elektroniczny.Models.Plan", "Plan")
                        .WithMany("Zajecia")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dziennik_elektroniczny.Models.Przedmiot", "Przedmiot")
                        .WithMany("Zajecia")
                        .HasForeignKey("PrzedmiotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dziennik_elektroniczny.Models.Sala", "Sala")
                        .WithMany("Zajecia")
                        .HasForeignKey("SalaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nauczyciel");

                    b.Navigation("Plan");

                    b.Navigation("Przedmiot");

                    b.Navigation("Sala");
                });

            modelBuilder.Entity("Opieka", b =>
                {
                    b.HasOne("Dziennik_elektroniczny.Models.Uzytkownik", null)
                        .WithMany()
                        .HasForeignKey("RodzicId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dziennik_elektroniczny.Models.Uzytkownik", null)
                        .WithMany()
                        .HasForeignKey("UczenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dziennik_elektroniczny.Models.Klasa", b =>
                {
                    b.Navigation("Plan")
                        .IsRequired();

                    b.Navigation("Uczniowie");
                });

            modelBuilder.Entity("Dziennik_elektroniczny.Models.Plan", b =>
                {
                    b.Navigation("Zajecia");
                });

            modelBuilder.Entity("Dziennik_elektroniczny.Models.Przedmiot", b =>
                {
                    b.Navigation("Oceny");

                    b.Navigation("Zadania");

                    b.Navigation("Zajecia");
                });

            modelBuilder.Entity("Dziennik_elektroniczny.Models.Sala", b =>
                {
                    b.Navigation("Zajecia");
                });

            modelBuilder.Entity("Dziennik_elektroniczny.Models.Semestr", b =>
                {
                    b.Navigation("Plany");
                });

            modelBuilder.Entity("Dziennik_elektroniczny.Models.Uzytkownik", b =>
                {
                    b.Navigation("Frekwencje");

                    b.Navigation("Oceny");

                    b.Navigation("ProwadzoneZajecia");

                    b.Navigation("UtworzoneZadania");

                    b.Navigation("Wychowawstwo")
                        .IsRequired();

                    b.Navigation("WystawioneOceny");
                });

            modelBuilder.Entity("Dziennik_elektroniczny.Models.Zajecia", b =>
                {
                    b.Navigation("Frekwencje");
                });
#pragma warning restore 612, 618
        }
    }
}
